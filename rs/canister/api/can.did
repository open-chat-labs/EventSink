type AnonymizationInitConfig = record {
  users : opt bool;
  exclusions : opt vec text;
  sources : opt bool;
};
type EventsArgs = record { start : nat64; length : nat64 };
type EventsResponse = record {
  latest_event_index_v2 : opt nat64;
  events : vec IndexedEvent;
  latest_event_index : opt nat64;
  is_v2 : bool;
};
type IdempotentEvent = record {
  source : opt text;
  name : text;
  user : opt text;
  timestamp : nat64;
  payload : vec nat8;
  idempotency_key : nat;
};
type IndexedEvent = record {
  source : opt text;
  name : text;
  user : opt text;
  timestamp : nat64;
  index : nat64;
  payload : vec nat8;
};
type InitArgs = record {
  push_events_whitelist : vec principal;
  anonymization_config : opt AnonymizationInitConfig;
  read_events_whitelist : vec principal;
};
type PushEventsArgs = record { events : vec IdempotentEvent };
type WhitelistedPrincipals = record {
  push : vec principal;
  read : vec principal;
};
service : (InitArgs) -> {
  events : (EventsArgs) -> (EventsResponse) query;
  push_events : (PushEventsArgs) -> ();
  whitelisted_principals : () -> (WhitelistedPrincipals) query;
}